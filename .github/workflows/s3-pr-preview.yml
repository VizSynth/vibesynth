name: S3 PR Preview Deployment

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    # Triggers on PRs to ANY branch (not just main)

# Allow only one concurrent deployment per PR
concurrency:
  group: s3-pr-preview-${{ github.event.number }}
  cancel-in-progress: false

jobs:
  deploy-pr-preview:
    name: "🚀 Deploy PR Preview to S3"
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    
    steps:
      - name: "📥 Checkout code"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "⚙️ Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.aws_region || 'us-west-1' }}

      - name: "🔍 Verify AWS access"
        run: |
          echo "AWS Account ID: $(aws sts get-caller-identity --query Account --output text)"
          echo "PR Number: ${{ github.event.number }}"
          echo "AWS Region: ${{ vars.aws_region || 'us-west-1' }}"

      - name: "🚀 Deploy PR preview to S3"
        env:
          PR_NUMBER: ${{ github.event.number }}
          AWS_S3_BUCKET: ${{ vars.aws_s3_bucket_pr_previews || 'vibesynth-pr-previews' }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.aws_cloudfront_distribution_id_previews }}
          AWS_REGION: ${{ vars.aws_region || 'us-west-1' }}
        run: |
          echo "🎯 Deploying PR #${PR_NUMBER} to S3"
          echo "Bucket: $AWS_S3_BUCKET"
          echo "Path: pr-${PR_NUMBER}/"
          
          # Deploy to S3 with PR-specific path
          aws s3 sync . "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/" \
            --delete \
            --exclude ".git/*" \
            --exclude ".github/*" \
            --exclude "node_modules/*" \
            --exclude "test-results/*" \
            --exclude "playwright-report/*" \
            --exclude "checkpoint-*" \
            --exclude "*.md" \
            --exclude "*.sh" \
            --exclude "temp-*" \
            --cache-control "text/html:max-age=300" \
            --cache-control "text/css:max-age=31536000" \
            --cache-control "application/javascript:max-age=31536000" \
            --cache-control "image/*:max-age=31536000"

      - name: "🔧 Set correct content types for PR preview"
        env:
          PR_NUMBER: ${{ github.event.number }}
          AWS_S3_BUCKET: ${{ vars.aws_s3_bucket_pr_previews || 'vibesynth-pr-previews' }}
        run: |
          # Set HTML content type
          aws s3 cp "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/index.html" "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/index.html" \
            --content-type "text/html" \
            --metadata-directive REPLACE

          # Set CSS content type
          aws s3 cp "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/style.css" "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/style.css" \
            --content-type "text/css" \
            --metadata-directive REPLACE

          # Set JavaScript content types
          for js_file in script.js layout.js test-suite.js; do
            if aws s3 ls "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/${js_file}" > /dev/null 2>&1; then
              aws s3 cp "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/${js_file}" "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/${js_file}" \
                --content-type "application/javascript" \
                --metadata-directive REPLACE
            fi
          done

      - name: "🔄 Invalidate CloudFront cache for PR preview"
        if: vars.aws_cloudfront_distribution_id_previews != ''
        env:
          PR_NUMBER: ${{ github.event.number }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.aws_cloudfront_distribution_id_previews }}
        run: |
          echo "🔄 Invalidating CloudFront cache for PR #${PR_NUMBER}"
          aws cloudfront create-invalidation \
            --distribution-id "${AWS_CLOUDFRONT_DISTRIBUTION_ID}" \
            --paths "/pr-${PR_NUMBER}/*" > /dev/null
          echo "✅ CloudFront cache invalidated"

      - name: "💬 Comment PR with preview URL"
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const bucketName = process.env.AWS_S3_BUCKET_PR_PREVIEWS || 'vibesynth-pr-previews';
            const region = process.env.AWS_REGION || 'us-west-1';
            const hasCloudFront = process.env.AWS_CLOUDFRONT_DISTRIBUTION_ID_PREVIEWS;
            
            // Generate preview URLs
            const s3Url = `http://${bucketName}.s3-website-${region}.amazonaws.com/pr-${prNumber}/`;
            const customUrl = hasCloudFront ? `https://pr-${prNumber}.vibesynth.one` : null;
            
            let body = `🚀 **PR Preview deployed to S3!**\n\n`;
            body += `📱 **S3 Preview URL**: ${s3Url}\n`;
            if (customUrl) {
              body += `🌍 **Custom Domain**: ${customUrl}\n`;
            }
            body += `\n✨ Updates automatically with each commit\n`;
            body += `🗂️ **S3 Path**: \`s3://${bucketName}/pr-${prNumber}/\`\n`;
            body += `⏱️ **Deployed**: ${new Date().toLocaleString()}\n`;
            body += `🔗 **Commit**: ${context.sha.substring(0, 7)}`;

            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
        env:
          AWS_S3_BUCKET_PR_PREVIEWS: ${{ vars.aws_s3_bucket_pr_previews || 'vibesynth-pr-previews' }}
          AWS_REGION: ${{ vars.aws_region || 'us-west-1' }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID_PREVIEWS: ${{ vars.aws_cloudfront_distribution_id_previews }}

      - name: "📊 Deployment summary"
        env:
          PR_NUMBER: ${{ github.event.number }}
          AWS_S3_BUCKET: ${{ vars.aws_s3_bucket_pr_previews || 'vibesynth-pr-previews' }}
          AWS_REGION: ${{ vars.aws_region || 'us-west-1' }}
        run: |
          echo "## 🎉 PR Preview Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR Number:** #${PR_NUMBER}" >> $GITHUB_STEP_SUMMARY
          echo "**S3 Bucket:** ${AWS_S3_BUCKET}" >> $GITHUB_STEP_SUMMARY
          echo "**S3 Path:** pr-${PR_NUMBER}/" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Access your PR preview:" >> $GITHUB_STEP_SUMMARY
          echo "- **S3 URL:** http://${AWS_S3_BUCKET}.s3-website-${AWS_REGION}.amazonaws.com/pr-${PR_NUMBER}/" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ vars.aws_cloudfront_distribution_id_previews }}" ]; then
            echo "- **Custom Domain:** https://pr-${PR_NUMBER}.vibesynth.one" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 What was deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ VibeSynth application files" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Proper content types configured" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Cache headers optimized" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ vars.aws_cloudfront_distribution_id_previews }}" ]; then
            echo "- ✅ CloudFront cache invalidated" >> $GITHUB_STEP_SUMMARY
          fi

  cleanup-pr-preview:
    name: "🗑️ Cleanup PR Preview"
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    
    steps:
      - name: "⚙️ Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.aws_region || 'us-west-1' }}

      - name: "🗑️ Remove PR preview from S3"
        env:
          PR_NUMBER: ${{ github.event.number }}
          AWS_S3_BUCKET: ${{ vars.aws_s3_bucket_pr_previews || 'vibesynth-pr-previews' }}
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ vars.aws_cloudfront_distribution_id_previews }}
        run: |
          echo "🗑️ Cleaning up PR #${PR_NUMBER} preview"
          
          # Remove PR folder from S3
          aws s3 rm "s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/" --recursive
          echo "✅ Removed s3://${AWS_S3_BUCKET}/pr-${PR_NUMBER}/"
          
          # Invalidate CloudFront cache if configured
          if [ -n "${AWS_CLOUDFRONT_DISTRIBUTION_ID}" ]; then
            aws cloudfront create-invalidation \
              --distribution-id "${AWS_CLOUDFRONT_DISTRIBUTION_ID}" \
              --paths "/pr-${PR_NUMBER}/*" > /dev/null
            echo "✅ CloudFront cache invalidated for cleanup"
          fi

      - name: "💬 Comment PR with cleanup confirmation"
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🗑️ **PR Preview cleaned up!**\n\n✅ Removed from S3 bucket\n🔄 CloudFront cache invalidated\n\n*PR preview is no longer accessible*`
            });

  notify-failure:
    name: "📢 Notify Failure"
    runs-on: ubuntu-latest
    needs: [deploy-pr-preview]
    if: failure()
    
    steps:
      - name: "❌ Failure notification"
        run: |
          echo "::error::🚨 PR Preview deployment FAILED!"
          echo "::error::❌ Check the deployment logs for details"
          echo "::error::🔍 Common issues: AWS credentials, bucket permissions, CloudFront configuration"
          echo "::error::📋 Failed PR: #${{ github.event.number }}"
          echo "::error::🔗 Commit: ${{ github.sha }}"
          exit 1